/*******************************************************************************
© Copyright 2003. The U.S. Government, as Represented by the Administrator of
the National Aeronautics and Space Administration (NASA). All rights reserved.
Includes content licensed from the U.S. Government, National Aeronautics and
Space Administration under United States Copyright Registration Numbers
V3503D364 and V3482D344.
© 2008-2015 NPSS® Consortium, www.NPSSConsortium.org/AllRightsReserved
*******************************************************************************/

/*******************************************************************************
NPSS® software and related documentation is export controlled with an Export
Control Classification Number(ECCN) of 9D991, controlled for Anti-Terrorism
reasons, under U.S. Export Administration Regulations 15 CFR 730-774. It may
not be transferred to a country checked under anti-terrorism on the Commerce
Country Chart structure or to foreign nationals of those countries in the U.S.
or abroad without first obtaining a license from the Bureau of Industry and
Security, United States Department of Commerce. Violations are punishable by
fine, imprisonment, or both.
*******************************************************************************/
// add in electric port
#include "ElectricPort.prt"
#include "InterpretedPort.int"

//include viewers
#include "npssel.view"
//#include "npssel_runtime.view"

// select model
#include "gen_to_motor.int"

setOption("switchDes","DESIGN"); 
autoSolverSetup();

//---------------------------------------------------------
// just like a rocket engine, volumes last
//---------------------------------------------------------
solver.debugLevel = "ITERATION_DETAILS";
solver.diagnosticFile = "Solver.bad";

solver.maxIterations = 5000;
solver.maxJacobians = 1000;

//setOption( "ElectricPowerType", "AC3" );

solver.debugLevel = "ITERATION_DETAILS";
solver.diagnosticFile = "solver.int";

solverSequence.remove("cable1");
//solverSequence.remove("cable2");
//solverSequence.remove("cable3");
solverSequence.remove("bus1");
//solverSequence.remove("bus2");
//solverSequence.remove("bus3");
//solverSequence.remove("bus4");
//solverSequence.remove("bus5");

solverSequence.append("cable1");
//solverSequence.append("cable2");
//solverSequence.append("cable3");
solverSequence.append("bus1");
//solverSequence.append("bus2");
//solverSequence.append("bus3");
//solverSequence.append("bus4");
//solverSequence.append("bus5");


Independent turbine_power{varName = "Turb.PRbase";}
 
run();
cout << "\nDESIGN ran!\n" << endl;

page.display();  // output data to out file

motorShaft.HPX = 650.;
setOption("switchDes","OFFDESIGN"); 

autoSolverSetup();

solverSequence.remove("cable1");
//solverSequence.remove("cable2");
//solverSequence.remove("cable3");
solverSequence.remove("bus1");
//solverSequence.remove("bus2");
//solverSequence.remove("bus3");
//solverSequence.remove("bus4");
//solverSequence.remove("bus5");

solverSequence.append("cable1");
//solverSequence.append("cable2");
//solverSequence.append("cable3");
solverSequence.append("bus1");
//solverSequence.append("bus2");
//solverSequence.append("bus3");
//solverSequence.append("bus4");
//solverSequence.append("bus5");

Independent AtmW{varName = "TurbineAtm.W";}
solver.addIndependent("AtmW");
solver.removeIndependent("motorShaft.ind_Nmech");

run();
cout << "\nOFFDESIGN ran!\n" << endl;

page.display();