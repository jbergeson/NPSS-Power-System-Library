//-------------------------------------------------------------------------------------------------
//
//   File Name:     AC_3phase_example
//   Date(s):       February 14, 2019
//   Author:        Tom Lavelle, David Sadey, Jeffrey Csank
//					NASA Glenn Research Center
//
//   Description:   simple example of 3 phase Y circuit from fifth editon of 
//					Power System Analysis and Design Page 67
//
//-------------------------------------------------------------------------------------------------
// create a power source class 
class Source extends Element{
    ElectricOutputPort EP_O;

    //EP_O.setIVRMS(0.,0.,208.,0.);
    real Ireal = 0.;
    real Iimag = 0.;
    real Vreal = 208.;
    //cout << Vreal << endl;
    real Vimag = 0.;
    void calculate(){
		EP_O.setIVRMS(EP_O.I.r, EP_O.I.j, 208., EP_O.V.j);        
    }
}

class Sink extends Element{
    ElectricInputPort EP_I;

    //EP_I.setIVRMS(EP_I.I.r, EP_I.I.j, 1., EP_I.V.j);
    void calculate(){
        real I;
        real pwr;
        pwr = 500.;
        real V;
        V = EP_I.V.r;
        if(V == 0){
            V = 1.;
        }
        I = pwr / V;
        cout << I << endl;
		EP_I.setIVRMS(I, EP_I.I.j, EP_I.V.r, EP_I.V.j);
    }
}

Source source{ 
    void postexecute() {
            cout << "post.source.output " << EP_O.V.r << endl;
        }
        void preexecute() {
            cout << "pre.source.output " << EP_O.V.r << endl;
        }
    
}

Element Bus bus1{
    ElectricInputPort EP_I;
    ElectricOutputPort EP_O;
    void postexecute() {
            cout << "post.bus.input " << EP_I.V.r << endl;
            cout << "post.bus.output " << EP_O.V.r << endl;
            cout << "\n bus is finished \n" << endl;
        }
        void preexecute() {
            cout << "pre.bus.input " << EP_I.V.r << endl;
            cout << "pre.bus.output " << EP_O.V.r << endl;
        }

}

Element BasicLoad cable1{
	R = 0.017449748;
    void postexecute() {
            cout << "post.cable.input " << EP_I.V.r << endl;
            cout << "post.cable.output " << EP_O.V.r << endl;
        }
        void preexecute() {
            cout << "pre.cable.input " << EP_I.V.r << endl;
            cout << "pre.cable.output " << EP_O.V.r << endl;
        }
    
}

Element Sink sink{
    void postexecute() {
            cout << "post.sink.input " << EP_I.V.r << endl;
        }
        void preexecute() {
            cout << "pre.sink.input " << EP_I.V.r << endl;
        }
}

//--------------------------------------------------------
// link it up
//--------------------------------------------------------
linkPortI( "source.EP_O", "cable1.EP_I");
linkPortI("cable1.EP_O", "bus1.EP_I");
linkPortI("bus1.EP_O", "sink.EP_I");
